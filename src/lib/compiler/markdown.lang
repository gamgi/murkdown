RULES FOR markdown PRODUCE text/markdown

PREPROCESS RULES:
[...DATE...]$
  EXEC "date" TO text/plain AS "date"
  PUSH src "exec:date"

[...EXEC...]$
  PUSH src "exec:run"

[...EXEC...] [SEC]$
  SET stdin "\v"
  EXEC "bash" TO text/plain AS "run"

[...UML...]$
  PUSH ref "exec:plantuml.png"

[...UML...] [SEC]$
  SET stdin "\v"
  EXEC "plantuml -pipe -tpng" TO image/png AS "plantuml.png"

COMPILE RULES:
/* root */
^[...]$
  PUSH join "\n"

/* root code section */
^[...] [SEC...] [...CODE...] [SEC...]$
  WRITE "```$language\n"
  YIELD
  WRITE "\n```"
  WRITE indent

/* code section */
[...CODE...] [SEC...]$
  WRITEALL prefix
  WRITE " ```$language\n"
  YIELD
  WRITE "\n"
  WRITEALL prefix
  WRITE " ```\n"

/* callout block */
[...TIP...]$
  PUSH prefix "\m"
  WRITEALL prefix
  WRITE " [!TIP]\n"
  YIELD
  POP prefix

/* code block */
[...CODE...]$
  SET language "$language"
  YIELD
  SET language ""

/* root block */
^[...] [SEC...] [...]$
  PUSH prefix "\m"
  YIELD
  POP prefix

/* heading block */
[...] [SEC...] [...HEADING...]$
  PUSH prefix "\m"
  YIELD
  POP prefix

/* nested block */
[...] [SEC...] [...]$
  PUSH prefix " \m"
  YIELD
  POP prefix

/* root code line */
^[...] [SEC...] [...CODE...] [SEC...] LINE$
  IS UNESCAPED_VALUE
  WRITEALL prefix
  WRITE "\v"

/* code line */
[...CODE...] [SEC...] LINE$
  IS UNESCAPED_VALUE
  WRITEALL prefix
  WRITE " \v"

/* root line */
^[...] [SEC...] LINE$
  WRITE prefix
  WRITE "\v"

/* line */
LINE$
  IS UNESCAPED_VALUE
  WRITEALL prefix
  WRITE " \v"
